{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Ruleset for assay type is 'ChIP-seq' and experiment target is leaf node descendant of 'SO_0001700'.",
  "title": "FAANG experiment metadata rules for 'ChIP-seq'",
  "name": "faang_experiments_chip-seq_dna-binding_proteins",
  "$async": true,
  "type": "object",
  "properties": {
    "describedBy": {
      "const": "https://github.com/FAANG/faang-metadata/blob/master/docs/faang_experiment_metadata.md"
    },
    "schema_version": {
      "description": "The version number of the schema in major.minor.patch format.",
      "type": "string",
      "pattern": "^[0-9]{1,}.[0-9]{1,}.[0-9]{1,}$",
      "example": "4.6.1"
    },
    "target_protein_name": {
      "type": "object",
      "name": "target protein name",
      "description": "The name of targeted protein.",
      "properties": {
        "term": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["NCIT:C73704", "NCIT:C17804", "NCIT:C34071"]
            },
            {
              "type": "string",
              "graph_restriction": {
                "ontologies": ["obo:ncit"],
                "classes": ["NCIT:C16687", "NCIT:C17207"],
                "relations": ["rdfs:subClassOf"],
                "direct": false,
                "include_self": true
              }
            }
          ]
        },
        "text": {
          "type": "string"
        },
        "mandatory": {
          "const": "optional"
        },
        "ontology_name": {
          "const": "NCIT"
        }
      }
    },
    "control_experiment": {
      "type": "object",
      "name": "control experiment",
      "description": "Experiment alias (in this submission) or ENA experiment accession (if submitted previously) of the ChIP-seq input DNA experiment which acts as the control/background for the analysis.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "chip_antibody_provider": {
      "type": "object",
      "name": "chip antibody provider",
      "description": "The name of the company, laboratory or person that provided the antibody e.g. Diagneode.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "chip_antibody_catalog": {
      "type": "object",
      "name": "chip antibody catalog",
      "description": "The catalog from which the antibody was purchased e.g. pAb-003-050.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "chip_antibody_lot": {
      "type": "object",
      "name": "chip antibody lot",
      "description": "The lot identifier of the antibody e.g. A5051-001P.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "library_generation_max_fragment_size_range": {
      "type": "object",
      "name": "library generation max fragment size range",
      "description": "The maximum fragment size range of the preparation.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "number"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "library_generation_min_fragment_size_range": {
      "type": "object",
      "name": "library generation min fragment size range",
      "description": "The minimum fragment size range of the preparation.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "number"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    }
  }
}