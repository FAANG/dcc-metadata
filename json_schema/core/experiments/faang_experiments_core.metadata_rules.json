{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Validation rules for the FAANG project. Rules are divided into one group that is applied to all experiments, and additional groups based on the experiment type.",
  "title": "FAANG experiments core metadata rules",
  "name": "faang_experiments_core.metadata_rules",
  "$async": true,
  "type": "object",
  "required": [
    "project",
    "assay_type",
    "sample_storage_processing",
    "sampling_to_preparation_interval",
    "extraction_protocol"
  ],
  "properties": {
    "describedBy": {
      "const": "https://github.com/FAANG/faang-metadata/blob/master/docs/faang_experiment_metadata.md"
    },
    "schema_version": {
      "description": "The version number of the schema in major.minor.patch format.",
      "type": "string",
      "pattern": "^[0-9]{1,}.[0-9]{1,}.[0-9]{1,}$",
      "example": "4.6.1"
    },
    "project": {
      "type": "object",
      "name": "Project",
      "description": "State that the project is 'FAANG'.",
      "required": ["value"],
      "properties": {
        "value": {
          "const": "FAANG"
        },
        "mandatory": {
          "const": "mandatory"
        }
      }
    },
    "secondary_project": {
      "type": "array",
      "name": "Secondary project",
      "description": "State the secondary project(s) that this data belongs to e.g. 'AQUA-FAANG', 'GENE-SWitCH' or 'BovReg'. Please use your official consortium shortened acronym if available. If your secondary project is not in the list, please contact the faang-dcc helpdesk to have it added. If your project uses the FAANG data portal project slices (https://data.faang.org/projects) then this field is required to ensure that your data appears in the data slice.",
      "items": {
        "type": "object",
        "required": ["value"],
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "AQUA-FAANG",
              "GENE-SWitCH",
              "BovReg",
              "Bovine-FAANG",
              "EFFICACE",
              "GEroNIMO",
              "RUMIGEN"
            ]
          },
          "mandatory": {
            "const": "optional"
          }
        }
      }
    },
    "assay_type": {
      "type": "object",
      "name": "assay type",
      "description": "The type of experiment performed.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "ATAC-seq",
            "ChIP-seq",
            "CAGE-seq",
            "whole genome sequencing assay",
            "DNase-Hypersensitivity seq",
            "Hi-C",
            "methylation profiling by high throughput sequencing",
            "microRNA profiling by high throughput sequencing",
            "RNA-seq of total RNA",
            "RNA-seq of coding RNA",
            "RNA-seq of non coding RNA",
            "transcription profiling by high throughput sequencing",
            "scRNA-seq",
            "ISO-Seq",
            "restricted access"
          ]
        },
        "mandatory": {
          "const": "mandatory"
        }
      }
    },
    "sample_storage": {
      "type": "object",
      "name": "sample storage",
      "description": "How the sample was stored. Temperatures are in celsius. 'Frozen, vapor phase' refers to storing samples above liquid nitrogen in the vapor.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "ambient temperature",
            "cut slide",
            "fresh",
            "frozen, -70 freezer",
            "frozen, -150 freezer",
            "frozen, liquid nitrogen",
            "frozen, vapor phase",
            "paraffin block",
            "RNAlater, frozen",
            "TRIzol, frozen"
          ]
        },
        "mandatory": {
          "const": "optional"
        }
      }
    },
    "sample_storage_processing": {
      "type": "object",
      "name": "sample storage processing",
      "description": "How the sample was prepared for storage.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "cryopreservation in liquid nitrogen (dead tissue)",
            "cryopreservation in dry ice (dead tissue)",
            "cryopreservation of live cells in liquid nitrogen",
            "cryopreservation, other",
            "formalin fixed, unbuffered",
            "formalin fixed, buffered",
            "formalin fixed and paraffin embedded",
            "fresh",
            "restricted access"
          ]
        },
        "mandatory": {
          "const": "mandatory"
        }
      }
    },
    "sampling_to_preparation_interval": {
      "type": "object",
      "name": "sampling to preparation interval",
      "description": "How long between the sample being taken and the assay experiment preperations commencing. If sample preperations were then left in intermediate stages after preperation commenced, for example as sheared chromatin, then this should be made clear in your protocols.",
      "required": ["value", "units"],
      "properties": {
        "value": {
          "oneOf": [
            {"type": "number"},
            {"const": "restricted access"}
          ]
        },
        "units": {
          "type": "string",
          "enum": [
            "minutes",
            "hours",
            "days",
            "weeks",
            "months",
            "years",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "year",
            "restricted access"
          ]
        },
        "mandatory": {
          "const": "mandatory"
        }
      }
    },
    "experimental_protocol": {
      "type": "object",
      "name": "experimental protocol",
      "description": "Link to the description of the experiment protocol, an overview of the full experiment, that can refer to the order in which other protocols were performed and any intermediate steps not covered by the extraction or assay specific protocols.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string",
          "format": "uri"
        },
        "mandatory": {
          "const": "optional"
        }
      }
    },
    "extraction_protocol": {
      "type": "object",
      "name": "extraction protocol",
      "description": "Link to the protocol used to isolate the extract material.",
      "required": ["value"],
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {"const": "restricted access"}
          ]
        },
        "mandatory": {
          "const": "mandatory"
        }
      }
    },
    "library_preparation_location": {
      "type": "object",
      "name": "library preparation location",
      "description": "Location where library preperation was performed.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "library_preparation_location_longitude": {
      "type": "object",
      "name": "library preparation location longitude",
      "description": "Longitude of the library prep location in decimal degrees.",
      "required": ["value", "units"],
      "properties": {
        "value": {
          "oneOf": [
            {"type": "number"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "units": {
          "oneOf": [
            {"const": "decimal degrees"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "library_preparation_location_latitude": {
      "type": "object",
      "name": "library preparation location latitude",
      "description": "Latitude of the library prep location in decimal degrees.",
      "required": ["value", "units"],
      "properties": {
        "value": {
          "oneOf": [
            {"type": "number"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "units": {
          "oneOf": [
            {"const": "decimal degrees"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "library_preparation_date": {
      "type": "object",
      "name": "library preparation date",
      "description": "Date on which the library was prepared.",
      "required": ["value", "units"],
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])|[12]\\d{3}-(0[1-9]|1[0-2])|[12]\\d{3}$"
            },
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "units": {
          "type": "string",
          "enum": [
            "YYYY-MM-DD",
            "YYYY-MM",
            "YYYY",
            "not applicable",
            "not collected",
            "not provided",
            "restricted access"
          ]
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "sequencing_location": {
      "type": "object",
      "name": "sequencing location",
      "description": "Location of where the sequencing was performed.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "string"
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "sequencing_location_longitude": {
      "type": "object",
      "name": "sequencing location longitude",
      "description": "Longitude of the sequencing location in decimal degrees.",
      "required": ["value", "units"],
      "properties": {
        "value": {
          "oneOf": [
            {"type": "number"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "units": {
          "oneOf": [
            {"const": "decimal degrees"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "sequencing_location_latitude": {
      "type": "object",
      "name": "sequencing location latitude",
      "description": "Latitude of the sequencing location in decimal degrees.",
      "required": ["value", "units"],
      "properties": {
        "value": {
          "oneOf": [
            {"type": "number"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "units": {
          "oneOf": [
            {"const": "decimal degrees"},
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    },
    "sequencing_date": {
      "type": "object",
      "name": "sequencing date",
      "description": "Date sequencing was performed.",
      "required": ["value", "units"],
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])|[12]\\d{3}-(0[1-9]|1[0-2])|[12]\\d{3}$"
            },
            {
              "type": "string",
              "enum": [
                "not applicable",
                "not collected",
                "not provided",
                "restricted access"
              ]
            }
          ]
        },
        "units": {
          "type": "string",
          "enum": [
            "YYYY-MM-DD",
            "YYYY-MM",
            "YYYY",
            "not applicable",
            "not collected",
            "not provided",
            "restricted access"
          ]
        },
        "mandatory": {
          "const": "recommended"
        }
      }
    }
  }
}
